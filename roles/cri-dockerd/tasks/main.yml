---
# tasks file for cri-dockerd
- name: Checkout from from ri-dockerd github
  git:
    repo: 'https://github.com/Mirantis/cri-dockerd.git'
    dest: cri-dockerd

- name: Download go lang installer
  get_url:
    url: https://storage.googleapis.com/golang/getgo/installer_linux
    dest: ./installer_linux
    mode: '0740'

- name: Install go lang
  shell: ./installer_linux >> go_installed.log
  args:
    chdir: $HOME
    creates: go_installed.log
    executable: /bin/bash

- name: Source go
  shell: "source /home/{{ ansible_user }}/.bash_profile >> go_sourced.log"
  args:
    chdir: "/home/{{ ansible_user }}"
    creates: go_sourced.log

- name: Create a directory bin
  file:
    path: "/home/{{ ansible_user }}/cri-dockerd/bin"
    state: directory
    mode: '0755'

- name: Go build
  shell: go build -o bin/cri-dockerd >> go_cri_dockerd_builded.log
  args:
    chdir: "/home/{{ ansible_user }}/cri-dockerd"
    creates: go_cri_dockerd_builded.log

- name: Create a directory if it does not exist
  file:
    path: /usr/local/bin
    state: directory
    mode: '0744'

- name: Install cri dockerd
  shell: install -o root -g root -m 0755 /home/{{ ansible_user }}/cri-dockerd/bin/cri-dockerd /usr/local/bin/cri-dockerd
  args:
    chdir: "/home/{{ ansible_user }}"
    creates: go_cri_dockerd_builded.log

- name: Copy cri-dockerd files to /etc/systemd
  copy:
    src: "/home/{{ ansible_user }}/cri-dockerd/packaging/systemd/"
    dest: /etc/systemd/system
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    remote_src: false
    directory_mode: true
    mode: '0644'

- name: Replace data in files
  replace:
    path: /etc/systemd/system/cri-docker.service
    regexp: '/usr/bin/cri-dockerd'
    replace: '/usr/local/bin/cri-dockerd'

- name: Daemon reload
  systemd:
    daemon_reload: yes

- name: Reload cri-docker
  systemd:
    state: started
    name: "{{ item }}"
    enabled: yes
  loop:
    - cri-docker.service
    - cri-docker.socket